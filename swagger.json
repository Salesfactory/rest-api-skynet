{
    "swagger": "2.0",
    "info": {
        "description": "Skynet API Documentation",
        "version": "1.0.0",
        "title": "Salesfactory Skynet"
    },
    "schemes": ["http"],
    "host": "localhost:5000",
    "basePath": "/api",
    "paths": {
        "/users": {
            "get": {
                "summary": "Get all users",
                "tags": ["users"],
                "description": "Returns a list of users. Can be filtered by the search query parameter.",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search query to filter users",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "example": 200
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Success"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new user",
                "tags": ["users"],
                "description": "Creates a new user.",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "user",
                        "description": "User object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "example": 200
                                },
                                "data": {
                                    "$ref": "#/definitions/User"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Success"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "example": 400
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Bad Request"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "summary": "Get user by ID",
                "tags": ["users"],
                "description": "Returns a specific user by ID.",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "example": 200
                                },
                                "data": {
                                    "$ref": "#/definitions/User"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Success"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "example": 404
                                },
                                "message": {
                                    "type": "string",
                                    "example": "User not found"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update user by ID",
                "tags": ["users"],
                "description": "Updates an existing user by ID.",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "user",
                        "description": "Updated user object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "example": 200
                                },
                                "data": {
                                    "$ref": "#/definitions/User"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Success"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "example": 400
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Bad Request"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "example": 404
                                },
                                "message": {
                                    "type": "string",
                                    "example": "User not found"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete user by ID",
                "tags": ["users"],
                "description": "Deletes an existing user by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User successfully deleted",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "example": 200
                                },
                                "data": {
                                    "$ref": "#/definitions/User"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "User deleted successfully"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "example": 404
                                },
                                "message": {
                                    "type": "string",
                                    "example": "User not found"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/channels": {
            "get": {
                "summary": "Get channel names",
                "tags": ["channels"],
                "description": "Returns a list of channel names.",
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "channel": {
                                        "type": "string",
                                        "example": "channel 1"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/channels/campaignTypes": {
            "parameters": [
                {
                    "name": "channelName",
                    "in": "query",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "summary": "Get campaign types for a specific channel",
                "description": "Retrieve a list of campaign types for the specified channel.",
                "tags": ["channels"],
                "responses": {
                    "200": {
                        "description": "Successful operation. Returns the list of campaign types.",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "example": 200
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Campaign types retrieved successfully"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "campaign_type": {
                                                "type": "string",
                                                "example": "DISPLAY"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. Something went wrong on the server side."
                    }
                }
            }
        },
        "/clients": {
            "get": {
                "summary": "Get client names",
                "tags": ["clients"],
                "description": "Returns a list of client names.",
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "client": {
                                        "type": "string",
                                        "example": "client 1"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/clients/{clientId}": {
            "get": {
                "summary": "Retrieve a client by ID",
                "description": "This endpoint retrieves a specific client by its unique ID.",
                "operationId": "getClient",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "Unique ID of the client to retrieve.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Client retrieved successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Client retrieved successfully"
                                },
                                "data": {
                                    "$ref": "#/definitions/Client"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Client not found",

                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Client not found"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",

                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "An unexpected error occurred"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/clients/{id}/marketingcampaign": {
            "get": {
                "summary": "Get marketing campaigns by client ID",
                "tags": ["clients"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "example": 200
                                },
                                "data": {
                                    "$ref": "#/definitions/MarketingCampaign"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Marketing campaigns retrieved successfully"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new marketing campaign",
                "tags": ["clients"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "example": 201
                                },
                                "data": {
                                    "$ref": "#/definitions/MarketingCampaign"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Marketing campaign created successfully"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/clients/{id}/marketingcampaign/{cid}": {
            "get": {
                "summary": "Get marketing campaign by ID",
                "tags": ["clients"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "cid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "example": 200
                                },
                                "data": {
                                    "$ref": "#/definitions/MarketingCampaign"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Marketing campaign retrieved successfully"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update marketing campaign by ID",
                "tags": ["clients"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "cid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "example": 200
                                },
                                "data": {
                                    "$ref": "#/definitions/MarketingCampaign"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Marketing campaign updated successfully"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete marketing campaign by ID",
                "tags": ["clients"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "cid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "example": 200
                                },
                                "data": {
                                    "$ref": "#/definitions/MarketingCampaign"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Marketing campaign deleted successfully"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/clients/{id}/non-orchestrated/campaigns": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "channel",
                    "in": "query",
                    "description": "The channel of the advertisement (e.g., Facebook, Twitter, etc.)",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "campaignName",
                    "in": "query",
                    "description": "The name of the campaign",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "campaignType",
                    "in": "query",
                    "description": "The type of the campaign (e.g., OUTCOME_TRAFFIC, OUTCOME_SALES, etc.)",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "keywords",
                    "in": "query",
                    "description": "Keywords to find campaigns (can be multiple, separated by commas)",
                    "required": false,
                    "type": "string"
                }
            ],
            "get": {
                "summary": "Get non orchestrated campaigns for a specific client",
                "description": "Retrieve a list of non orchestrated campaigns based on the specified parameters for a given client.",
                "tags": ["clients"],
                "responses": {
                    "200": {
                        "description": "Bigquery campaigns retrieved successfully"
                    },
                    "400": {
                        "description": "Missing required fields: channel, campaignName, campaignType"
                    },
                    "404": {
                        "description": "Client not found"
                    },
                    "500": {
                        "description": "Internal server error. Something went wrong on the server side."
                    }
                }
            }
        },
        "/clients/{id}/non-orchestrated/adsets": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "adsetName",
                    "in": "query",
                    "description": "The name of the campaign set",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "campaignId",
                    "in": "query",
                    "description": "The id of the campaign",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "keywords",
                    "in": "query",
                    "description": "Keywords to find campaigns (can be multiple, separated by commas)",
                    "required": false,
                    "type": "string"
                }
            ],
            "get": {
                "summary": "Get adsets for a specific campaign of a client",
                "description": "Retrieve a list of adsets of a campaign based on the specified parameters for a given client.",
                "tags": ["clients"],
                "responses": {
                    "200": {
                        "description": "Bigquery adsets retrieved successfully"
                    },
                    "400": {
                        "description": "Missing required fields: adsetName, campaignId"
                    },
                    "404": {
                        "description": "Client not found"
                    },
                    "500": {
                        "description": "Internal server error. Something went wrong on the server side."
                    }
                }
            }
        },
        "/campaigns": {
            "get": {
                "summary": "Get recently created marketing campaigns",
                "tags": ["campaigns"],
                "responses": {
                    "200": {
                        "description": "Recent marketing campaigns retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecentCampaign"
                            }
                        }
                    }
                }
            }
        },
        "/clients/{id}/marketingcampaign/{cid}/campaigns": {
            "get": {
                "summary": "Get campaigns for a marketing campaign",
                "tags": ["clients"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "cid",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign retrieved successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "integer",
                                    "example": 200
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Campaign retrieved successfully"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CampaignObject"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/clients/{id}/marketingcampaign/{cid}/campaigns/{caid}": {
            "get": {
                "summary": "Get a specific campaign for a marketing campaign",
                "tags": ["clients"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "cid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "caid",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/CampaignObject"
                        }
                    }
                }
            }
        },
        "/clients/{id}/marketingcampaign/{cid}/campaigns/{caid}/goals": {
            "put": {
                "summary": "Update goals for a specific campaign in a marketing campaign",
                "tags": ["clients"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "cid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "caid",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "goals",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "goals": {
                                    "type": "string",
                                    "example": "1. Do something\n2. Do something else\n3. Nothing else"
                                }
                            },
                            "required": ["goals"]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goals updated successfully",
                        "schema": {
                            "$ref": "#/definitions/MarketingCampaign"
                        }
                    }
                }
            }
        },
        "/{id}/marketingcampaign/{cid}/campaigns/{caid}/pause": {
            "put": {
                "summary": "Pause a specific campaign in a marketing campaign",
                "tags": ["clients"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "cid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "caid",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "pause",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pause": {
                                    "type": "boolean"
                                },
                                "reason": {
                                    "type": "string"
                                }
                            },
                            "required": ["pause"]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign paused successfully",
                        "schema": {
                            "$ref": "#/definitions/MarketingCampaignWithPauseReason"
                        }
                    }
                }
            }
        },
        "/{id}/marketingcampaign/{cid}/campaigns/{caid}": {
            "delete": {
                "summary": "Delete a specific campaign in a marketing campaign",
                "tags": ["clients"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "cid",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "caid",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "delete",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "reason": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/MarketingCampaignWithDeleteInfo"
                        }
                    }
                }
            }
        },
        "/notifications/": {
            "get": {
                "summary": "Get all notifications",
                "tags": ["notifications"],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Notification"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "summary": "Create a new notification",
                "tags": ["notifications"],
                "parameters": [
                    {
                        "name": "notification",
                        "in": "body",
                        "description": "Notification object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Notification created successfully",
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/notifications/status/{status}": {
            "get": {
                "summary": "Get notifications by status",
                "tags": ["notifications"],
                "parameters": [
                    {
                        "name": "status",
                        "in": "path",
                        "description": "Notification status (unread or read)",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Notification"
                                    }
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/notifications/{id}": {
            "patch": {
                "summary": "Update a notification by ID",
                "tags": ["notifications"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification ID",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification updated successfully",
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        }
                    },
                    "404": {
                        "description": "Notification not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/notifications/{id}/read": {
            "patch": {
                "summary": "Mark a notification as read by ID",
                "tags": ["notifications"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification ID",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification marked as read successfully",
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        }
                    },
                    "404": {
                        "description": "Notification not found or already marked as read"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "uid": {
                    "type": "string",
                    "example": "6cb69c71-3b9a-4a0f-8f1a-4d7d2f2e0b0e"
                },
                "avatar": {
                    "type": "string",
                    "example": "https://example.com/avatar.jpg"
                },
                "description": {
                    "type": "string",
                    "example": "User description"
                },
                "contact": {
                    "type": "string",
                    "example": "Contact information"
                },
                "active": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "MarketingCampaign": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Campaña 1"
                },
                "client_id": {
                    "type": "string",
                    "example": "Test Client 1"
                },
                "company_name": {
                    "type": "string",
                    "example": "Company"
                },
                "goals": {
                    "type": "string",
                    "example": "1"
                },
                "total_gross_budget": {
                    "type": "integer",
                    "example": 1
                },
                "margin": {
                    "type": "integer",
                    "example": 1
                },
                "flight_time_start": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2022-11-11T04:00:00.000Z"
                },
                "flight_time_end": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-11-11T04:00:00.000Z"
                },
                "net_budget": {
                    "type": "integer",
                    "example": 1
                },
                "channels": {
                    "type": "string",
                    "example": "a,b,c"
                },
                "comments": {
                    "type": "string",
                    "example": "comment"
                },
                "budget": {
                    "type": "object",
                    "properties": {
                        "periods": {
                            "example": [
                                { "id": 1, "name": "August" },
                                { "id": 2, "name": "September" },
                                { "id": 3, "name": "October" },
                                { "id": 4, "name": "November" }
                            ]
                        },
                        "allocations": {
                            "example": [
                                {
                                    "budget": "1000",
                                    "percentage": "100%",
                                    "allocations": [
                                        {
                                            "id": 1,
                                            "name": "Channel",
                                            "budget": "500",
                                            "percentage": "50%",
                                            "allocations": []
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-07-10T22:13:23.552Z"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-07-10T22:13:23.552Z"
                }
            }
        },
        "RecentCampaign": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Test campaign"
                },
                "company_name": {
                    "type": "string",
                    "example": "Test company name"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2023-08-11T16:47:01.294Z"
                }
            }
        },
        "CampaignObject": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Facebook Ads - Campaign 1"
                },
                "channel": {
                    "type": "string",
                    "example": "Facebook"
                },
                "campaign_type": {
                    "type": "string",
                    "example": "Facebook Ads"
                },
                "goals": {
                    "type": "string",
                    "example": "1. Do something\n2. Do something else\n3. Nothing else"
                },
                "adsets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AdsetObject"
                    }
                }
            }
        },
        "AdsetObject": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "campaign_id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Facebook Ads - Campaign 1 - Adset 1"
                },
                "channel": {
                    "type": "string",
                    "example": "Facebook"
                },
                "campaign_type": {
                    "type": "string",
                    "example": "Facebook Ads"
                },
                "campaign": {
                    "type": "string",
                    "example": "Facebook Ads - Campaign 1"
                }
            }
        },
        "MarketingCampaignWithPauseReason": {
            "allOf": [
                {
                    "$ref": "#/definitions/MarketingCampaign"
                },
                {
                    "type": "object",
                    "properties": {
                        "pause": {
                            "type": "boolean",
                            "example": true
                        },
                        "reason": {
                            "type": "string",
                            "example": "Campaign performance"
                        }
                    },
                    "required": ["pause"]
                }
            ]
        },
        "MarketingCampaignWithDeleteInfo": {
            "allOf": [
                {
                    "$ref": "#/definitions/MarketingCampaign"
                },
                {
                    "type": "object",
                    "properties": {
                        "deleted": {
                            "type": "boolean",
                            "example": true
                        },
                        "deleted_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-08-25T10:15:00Z"
                        },
                        "delete_reason": {
                            "type": "string",
                            "example": "Campaign completion"
                        }
                    }
                }
            ]
        },
        "Client": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Notification": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "campaign_group_info": {
                    "type": "string"
                },
                "client_info": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        }
    }
}
